'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var _ = _interopDefault(require('lodash'));

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.6.11' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
var _core_1 = _core.version;

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function (it) {
  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$1 = _global.document;
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function (it) {
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!_isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var _hide = _descriptors ? function (object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var _shared = createCommonjsModule(function (module) {
var SHARED = '__core-js_shared__';
var store = _global[SHARED] || (_global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: _core.version,
  mode:  'global',
  copyright: 'Â© 2019 Denis Pushkarev (zloirock.ru)'
});
});

var _functionToString = _shared('native-function-to-string', Function.toString);

var _redefine = createCommonjsModule(function (module) {
var SRC = _uid('src');

var TO_STRING = 'toString';
var TPL = ('' + _functionToString).split(TO_STRING);

_core.inspectSource = function (it) {
  return _functionToString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) _has(val, 'name') || _hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === _global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    _hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    _hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || _functionToString.call(this);
});
});

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function (fn, that, length) {
  _aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // extend global
    if (target) _redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) _hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
_global.core = _core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
var _export = $export;

var toString = {}.toString;

var _cof = function (it) {
  return toString.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject = function (it) {
  return _iobject(_defined(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength

var min = Math.min;
var _toLength = function (it) {
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index = _toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _wks = createCommonjsModule(function (module) {
var store = _shared('wks');

var Symbol = _global.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = _wks('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});
var _addToUnscopables = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};

// https://github.com/tc39/Array.prototype.includes

var $includes = _arrayIncludes(true);

_export(_export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

_addToUnscopables('includes');

// 7.2.8 IsRegExp(argument)


var MATCH = _wks('match');
var _isRegexp = function (it) {
  var isRegExp;
  return _isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : _cof(it) == 'RegExp');
};

// helper for String#{startsWith, endsWith, includes}



var _stringContext = function (that, searchString, NAME) {
  if (_isRegexp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(_defined(that));
};

var MATCH$1 = _wks('match');
var _failsIsRegexp = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH$1] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};

var INCLUDES = 'includes';

_export(_export.P + _export.F * _failsIsRegexp(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~_stringContext(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});

var f$1 = {}.propertyIsEnumerable;

var _objectPie = {
	f: f$1
};

var gOPD = Object.getOwnPropertyDescriptor;

var f$2 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = _toIobject(O);
  P = _toPrimitive(P, true);
  if (_ie8DomDefine) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
};

var _objectGopd = {
	f: f$2
};

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */


var check = function (O, proto) {
  _anObject(O);
  if (!_isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

var setPrototypeOf = _setProto.set;
var _inheritIfRequired = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && _isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};

var shared = _shared('keys');

var _sharedKey = function (key) {
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)

var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

var f$3 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return _objectKeysInternal(O, hiddenKeys);
};

var _objectGopn = {
	f: f$3
};

var _stringWs = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

var space = '[' + _stringWs + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = _fails(function () {
    return !!_stringWs[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : _stringWs[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  _export(_export.P + _export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(_defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

var _stringTrim = exporter;

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys = _objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO$1 = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = _enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

var gOPN = _objectGopn.f;
var gOPD$1 = _objectGopd.f;
var dP$1 = _objectDp.f;
var $trim = _stringTrim.trim;
var NUMBER = 'Number';
var $Number = _global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = _cof(_objectCreate(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = _toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? _fails(function () { proto.valueOf.call(that); }) : _cof(that) != NUMBER)
        ? _inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = _descriptors ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (_has(Base, key = keys[j]) && !_has($Number, key)) {
      dP$1($Number, key, gOPD$1(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  _redefine(_global, NUMBER, $Number);
}

var _iterStep = function (done, value) {
  return { value: value, done: !!done };
};

var _iterators = {};

var def = _objectDp.f;

var TAG = _wks('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 7.1.13 ToObject(argument)

var _toObject = function (it) {
  return Object(_defined(it));
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$2 = _sharedKey('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

var ITERATOR = _wks('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if ( typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ( (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    _hide(proto, ITERATOR, $default);
  }
  // Plug for library
  _iterators[NAME] = $default;
  _iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
  this._t = _toIobject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return _iterStep(1);
  }
  if (kind == 'keys') return _iterStep(0, index);
  if (kind == 'values') return _iterStep(0, O[index]);
  return _iterStep(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
_iterators.Arguments = _iterators.Array;

_addToUnscopables('keys');
_addToUnscopables('values');
_addToUnscopables('entries');

var ITERATOR$1 = _wks('iterator');
var TO_STRING_TAG = _wks('toStringTag');
var ArrayValues = _iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = _global[NAME];
  var proto$1 = Collection && Collection.prototype;
  var key$1;
  if (proto$1) {
    if (!proto$1[ITERATOR$1]) _hide(proto$1, ITERATOR$1, ArrayValues);
    if (!proto$1[TO_STRING_TAG]) _hide(proto$1, TO_STRING_TAG, NAME);
    _iterators[NAME] = ArrayValues;
    if (explicit) for (key$1 in es6_array_iterator) if (!proto$1[key$1]) _redefine(proto$1, key$1, es6_array_iterator[key$1], true);
  }
}

var script = {
  name: 'cmui-tabbar-nav',
  props: {
    items: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    activeIndex: {
      type: Number,
      default: 0
    },
    itemStyle: {
      type: Object,
      default: function _default() {
        return {};
      }
    }
  },
  inject: ['cmuiTabbar'],
  methods: {
    itemEvent: function itemEvent(item, index) {
      var oldIndex = this.cmuiTabbar.activeIndex;
      this.$emit('nav-item', item, index, oldIndex);
      this.cmuiTabbar.changeToIndex(index);
    }
  },
  render: function render(h) {
    var _this = this;

    this.cmuiTabbar.items.forEach(function (item, index) {
      return item.index = index;
    });
    var items = this.cmuiTabbar.items.map(function (item, index) {
      return h('div', {
        class: ['cmui-tabbar__head-item', {
          active: index === _this.cmuiTabbar.activeIndex,
          flex1: _this.cmuiTabbar.col !== 'center'
        }],
        style: _this.itemStyle,
        on: {
          click: function click() {
            _this.itemEvent(item, index);
          }
        }
      }, item.$slots.title || [h('div', {}, item.$attrs.title)]);
    });
    return h('div', {
      class: 'cmui-tabbar__nav flex1'
    }, items);
  }
};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    const options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    let hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            const originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            const existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

/* script */
const __vue_script__ = script;

/* template */

  /* style */
  const __vue_inject_styles__ = undefined;
  /* scoped */
  const __vue_scope_id__ = undefined;
  /* module identifier */
  const __vue_module_identifier__ = undefined;
  /* functional template */
  const __vue_is_functional_template__ = undefined;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__ = /*#__PURE__*/normalizeComponent(
    {},
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    undefined,
    undefined,
    undefined
  );

// 21.2.5.3 get RegExp.prototype.flags

var _flags = function () {
  var that = _anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};

// 21.2.5.3 get RegExp.prototype.flags()
if (_descriptors && /./g.flags != 'g') _objectDp.f(RegExp.prototype, 'flags', {
  configurable: true,
  get: _flags
});

var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  _redefine(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (_fails(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = _anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !_descriptors && R instanceof RegExp ? _flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}

function log (text, data) {
  var styleString = '';
  styleString += 'font-size:13px;';
  styleString += 'font-family:"microsoft yahei";';
  styleString += 'color:#125ce8;';
  var line = '------------------';

  if (arguments.length !== 1) {
    console.log('%c' + line + text.toString() + line + '', styleString);

    for (var i = 1; i < arguments.length; i++) {
      console.log(arguments[i]);
    }

    console.log('%c' + line + text.toString() + line + '\n\n\n', styleString);
  } else {
    console.log('%c' + line + line + '', styleString);
    console.log(text);
    console.log('%c' + line + line + '\n\n\n', styleString);
  }
}

var timer;

function scrollTo(target) {
  var dom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.documentElement;
  var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};
  var animate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  timer && cancelAnimationFrame(timer);
  var top = target.top,
      left = target.left;

  if (_.isNumber(top)) {
    var domPos = dom.scrollTop;

    if (Math.abs(top - domPos) <= 3 || !animate) {
      dom.scrollTop = top;
      _.isFunction(callback) && callback();
    } else {
      var t = dom.scrollTop;
      dom.scrollTop = top < domPos ? domPos - domPos / 8 : domPos + (top - domPos) / 8 + 1;
      if (dom.scrollTop === t) return;
      timer = requestAnimationFrame(function () {
        return scrollTo({
          top: top
        }, dom, callback);
      });
    }
  }

  if (_.isNumber(left)) {
    var _domPos = dom.scrollLeft;

    if (Math.abs(left - _domPos) <= 3 || !animate) {
      dom.scrollLeft = left;
      _.isFunction(callback) && callback();
    } else {
      var _t = dom.scrollLeft;
      dom.scrollLeft = left < _domPos ? _domPos - _domPos / 8 : _domPos + (left - _domPos) / 8 + 1;
      if (dom.scrollLeft === _t) return;
      timer = requestAnimationFrame(function () {
        return scrollTo({
          left: left
        }, dom, callback);
      });
    }
  }
}

function scrollBar () {
  for (var _len = arguments.length, arg = new Array(_len), _key = 0; _key < _len; _key++) {
    arg[_key] = arguments[_key];
  }

  var dom = _.remove(arg, _.isElement)[0] || document.documentElement;

  var animate = _.remove(arg, _.isBoolean)[0];

  var callback = _.remove(arg, _.isFunction)[0];

  var domScrollTop = dom.scrollTop || document.body.scrollTop;
  var domScrollLeft = dom.scrollLeft || document.body.scrollLeft;
  var argLen = arg.length;
  var regexp = /^-?(\d+(?:\.\d+)?)(%|view)?$/;
  var curr, total, view, temp;

  if (argLen === 1) {
    // è¯»æä½
    switch (arg[0]) {
      case 'top':
        total = dom.scrollHeight;
        curr = domScrollTop;
        view = dom.clientHeight;
        break;

      case 'bottom':
        total = dom.scrollHeight;
        view = dom.clientHeight;
        curr = total - domScrollTop - view;
        break;

      case 'left':
        total = dom.scrollWidth;
        curr = domScrollLeft;
        view = dom.clientWidth;
        break;

      case 'right':
        total = dom.scrollWidth;
        view = dom.clientWidth;
        curr = total - domScrollLeft - view;
        break;
    }

    return {
      px: curr,
      percent: Math.floor(curr / total * 100),
      view: parseFloat((curr / view).toFixed(1))
    };
  } else {
    // åæä½
    temp = regexp.exec(arg[1].toString());

    if (temp) {
      switch (arg[0]) {
        case 'top':
          curr = parseFloat(temp[1]);

          if (temp[2] === '%') {
            // ç¾åæ¯
            curr = curr * dom.scrollHeight / 100;
          } else if (temp[2] === 'view') {
            // å±æ°
            curr = curr * dom.clientHeight;
          }

          scrollTo({
            top: curr
          }, dom, callback, animate); // dom.scrollTop = curr

          break;

        case 'bottom':
          curr = parseFloat(temp[1]);

          if (temp[2] === '%') {
            // ç¾åæ¯
            curr = Math.max(dom.scrollHeight * (1 - curr / 100), 0);
          } else if (temp[2] === 'view') {
            // å±æ°
            curr = Math.max(dom.scrollHeight - (curr + 1) * dom.clientHeight, 0);
          } else {
            curr = dom.scrollHeight - curr;
          }

          scrollTo({
            top: curr
          }, dom, callback, animate); // dom.scrollTop = curr

          break;

        case 'left':
          curr = parseFloat(temp[1]);

          if (temp[2] === '%') {
            // ç¾åæ¯
            curr = curr * dom.scrollWidth / 100;
          } else if (temp[2] === 'view') {
            // å±æ°
            curr = curr * dom.clientWidth;
          }

          scrollTo({
            left: curr
          }, dom, callback, animate); // dom.scrollLeft = curr

          break;

        case 'right':
          curr = parseFloat(temp[1]);

          if (temp[2] === '%') {
            // ç¾åæ¯
            curr = Math.max(dom.scrollWidth * (1 - curr / 100), 0);
          } else if (temp[2] === 'view') {
            // å±æ°
            curr = Math.max(dom.scrollWidth - (curr + 1) * dom.clientWidth, 0);
          } else {
            curr = dom.scrollWidth - curr;
          }

          scrollTo({
            left: curr
          }, dom, callback, animate); // dom.scrollLeft = curr

          break;

        default:
          log('scrollBarååè®¾ç½®éè¯¯ï¼è¯·ä½¿ç¨"left right top bottom" ä¸­çå¼');
          break;
      }
    } else {
      log('scrollBaræ°å¼è®¾ç½®éè¯¯ï¼è¯·ä½¿ç¨"20"ï¼"20%"æ"20view"å½¢å¼çåæ°');
    }
  }
}

var contentScrollEvent = _.throttle(function (e) {
  if (this.stopScrollEvent) return;

  if (this.isVertical) {
    var _this$$refs$content$g = this.$refs.content.getBoundingClientRect(),
        contentTop = _this$$refs$content$g.top,
        contentBottom = _this$$refs$content$g.bottom;

    switch (e.target) {
      case this.$refs.content:
        var findIndex = _.findLastIndex(this.$refs.content.childNodes, function (item) {
          return item.getBoundingClientRect().top <= contentTop;
        });

        if (~findIndex) this.activeIndex = findIndex;
        break;

      case document:
        this.disableContent = !(contentTop <= this.top || contentBottom <= document.documentElement.clientHeight);
        break;
    }
  } else {
    var _this$$refs$head$getB = this.$refs.head.getBoundingClientRect(),
        top = _this$$refs$head$getB.top,
        height = _this$$refs$head$getB.height;

    var _findIndex = _.findLastIndex(this.$refs.content.childNodes, function (item) {
      return item.getBoundingClientRect().top <= top + height;
    });

    if (~_findIndex) this.activeIndex = _findIndex;
  }
}, {
  wait: 50,
  trailing: false
});

var script$1 = {
  name: 'cmui-tabbar',
  components: {
    cmuiTabbarNav: __vue_component__
  },
  provide: function provide() {
    return {
      cmuiTabbar: this
    };
  },
  props: {
    col: {
      type: [String, Number],
      default: 'auto',
      intro: 'navçåæ°,å¦æä¸ºæ°å­åå°navåæå¯¹åºçä»½æ°ï¼å¦æitemæ°éè¶è¿colåæ»å¨æ¾ç¤º'
    },
    index: {
      type: Number,
      default: 0,
      intro: 'æ´»å¨çç´¢å¼'
    },
    nav: {
      type: Array,
      default: function _default() {
        return [false, false];
      },
      intro: 'æ¯å¦æ¾ç¤ºå·¦å³å¯¼èª'
    },
    position: {
      type: String,
      default: 'top',
      intro: 'navæ çä½ç½®ï¼ä½ å¯ä»¥å¨top bottom right leftä¸­ä»»éå¶ä¸'
    },
    screen: {
      type: Boolean,
      default: false,
      intro: 'æ¯å¦ä½¿ç¨ç­éæ¨¡å¼'
    },
    top: {
      type: Number,
      default: 0,
      intro: 'ç²è´´è·é¡¶é¨çä½ç½®ï¼åä½ï¼åç´ '
    },
    throttle: {
      type: Number,
      default: 100,
      intro: 'screenæ¨¡å¼ä¸èæµå½æ°çé´éæ¶é´'
    }
  },
  data: function data() {
    return {
      items: [],
      activeIndex: this.index,
      stopScrollEvent: false,
      disableContent: true,
      contentScrollEvent: contentScrollEvent.bind(this)
    };
  },
  computed: {
    stopContentScroll: function stopContentScroll() {
      return this.isVertical && this.disableContent;
    },
    itemStyle: function itemStyle() {
      var rs = {};

      if (_.isNumber(this.col)) {
        rs[this.isVertical ? 'height' : 'width'] = 100 / this.col + '%';
      }

      return rs;
    },
    isVertical: function isVertical() {
      return _.includes(['left', 'right'], this.position);
    },
    headContainerClass: function headContainerClass() {
      return {
        'scroll-container': !this.isVertical,
        'scroll-container-y': this.isVertical,
        'flex-container': this.col === 'flex' && !this.isVertical,
        'flex-container-col': this.col === 'flex' && this.isVertical,
        'flex-container center': this.col === 'center' && !this.isVertical,
        'flex-container-col center': this.col === 'center' && this.isVertical
      };
    },
    showPreNav: function showPreNav() {
      return !!_.get(this.nav, '[0]');
    },
    showNextNav: function showNextNav() {
      return !!_.get(this.nav, '[1]');
    },
    extras: function extras() {
      return this.$slots.extra || [];
    }
  },
  watch: {
    activeIndex: function activeIndex(index) {
      this.$emit('update:index', index);
    }
  },
  mounted: function mounted() {
    this.update();

    if (this.screen) {
      document.addEventListener('scroll', this.contentScrollEvent, true);
    }
  },
  destroyed: function destroyed() {
    if (this.screen) {
      document.removeEventListener('scroll', this.contentScrollEvent);
    }
  },
  updated: function updated() {
    this.update();
  },
  methods: {
    scrollAcitveIntoViewIfNeeded: function scrollAcitveIntoViewIfNeeded() {
      var isStart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var tabBar = this.$refs.nav.$el;
      var activeItem = tabBar.children[this.activeIndex];
      var tabBarP = tabBar.getBoundingClientRect();
      var activeItemP = activeItem.getBoundingClientRect();
      var pos = this.isVertical ? ['top', 'bottom'] : ['left', 'right'];

      if (!_.inRange(activeItemP[pos[0]], tabBarP[pos[0]], tabBarP[pos[1]])) {
        activeItem.scrollIntoView(isStart);
      }
    },
    changeToNext: function changeToNext() {
      if (this.activeIndex < this.items.length - 1) {
        this.activeIndex++;
        this.changeToIndex(this.activeIndex);
      }
    },
    changeToPre: function changeToPre() {
      if (this.activeIndex > 0) {
        this.activeIndex--;
        this.changeToIndex(this.activeIndex);
      }
    },
    changeToIndex: function changeToIndex() {
      var _this2 = this;

      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      if (_.inRange(index, this.items.length)) {
        var _this = this;

        var targetContent = this.$refs.content.childNodes[index];
        this.activeIndex = index;

        if (this.screen) {
          this.stopScrollEvent = true;

          if (this.isVertical) {
            scrollBar(this.$refs.content, 'top', targetContent.offsetTop, true, function () {
              _.delay(function () {
                _this.stopScrollEvent = false;
              }, 100);
            });
          } else {
            var t = targetContent.getBoundingClientRect().top + targetContent.ownerDocument.defaultView.pageYOffset - this.$refs.head.getBoundingClientRect().height;
            scrollBar('top', t, true, function () {
              _.delay(function () {
                _this.stopScrollEvent = false;
              }, 100);
            });
          }
        }

        this.$nextTick(function () {
          _this2.scrollAcitveIntoViewIfNeeded(true);
        });
      }
    },
    changeByStep: function changeByStep() {
      var num = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

      if (_.inRange(this.activeIndex + num, this.items.length)) {
        this.activeIndex += num;
        this.changeToIndex(this.activeIndex);
      }
    },
    getItems: function getItems() {
      return _.filter(this.$slots.default, function (item) {
        return item.tag === 'cmui-tabbar-item';
      });
    },
    extraEvent: function extraEvent(event, item, index) {
      this.$emit('extra-click', this, item, index);
    },
    navItem: function navItem() {
      this.$emit.apply(this, ['item-click', this].concat(Array.prototype.slice.call(arguments)));
    },
    update: function update() {
      var _this3 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (this.$slots.default) {
        var items = _.filter(this.$slots.default, function (vnode) {
          return _.get(vnode, 'componentOptions.Ctor.options.name') === 'cmui-tabbar-item';
        }).map(function (_ref) {
          var componentInstance = _ref.componentInstance;
          return componentInstance;
        });

        var changed = !(items.length === this.items.length && items.every(function (pane, index) {
          return pane === _this3.items[index];
        }));

        if (force || changed) {
          this.items = items;
        }
      } else {
        this.items = [];
      }
    }
  },
  render: function render(h) {
    var items = this.items,
        activeIndex = this.activeIndex,
        position = this.position,
        changeToPre = this.changeToPre,
        changeToNext = this.changeToNext,
        headContainerClass = this.headContainerClass,
        isVertical = this.isVertical,
        itemStyle = this.itemStyle,
        navItem = this.navItem,
        screen = this.screen,
        extras = this.extras,
        extraEvent = this.extraEvent;
    var content = h('div', {
      class: {
        'cmui-tabbar__content pos-r': true,
        'flex1': screen || isVertical,
        'scroll-container-y': this.screen,
        'overflow-h': this.stopContentScroll
      },
      on: {
        scroll: contentScrollEvent.bind(this)
      },
      ref: 'content'
    }, this.$slots.default);
    var pre = h('div', {
      class: {
        'cmui-tabbar__pre': true,
        'text-center': true
      },
      on: {
        click: changeToPre
      }
    }, [h('i', {
      class: "baseIcon baseIcon-".concat(isVertical ? 'fold' : 'back')
    })]);
    var next = h('div', {
      class: {
        'cmui-tabbar__next': true,
        'text-center': true
      },
      on: {
        click: changeToNext
      }
    }, [h('i', {
      class: "baseIcon baseIcon-".concat(isVertical ? 'unfold' : 'right')
    })]);
    var nav = h('cmui-tabbar-nav', {
      class: headContainerClass,
      props: {
        items: items,
        activeIndex: activeIndex,
        itemStyle: itemStyle
      },
      on: {
        'nav-item': navItem
      },
      ref: 'nav'
    });
    var extraList = extras.map(function (item, index) {
      return h('div', {
        class: 'cmui-tabbar__extra-item',
        key: index,
        on: {
          click: _.partialRight(extraEvent, item, index)
        }
      }, [item]);
    });
    var extra = h('div', {
      class: {
        'cmui-tabbar__extra': true,
        'flex-container': !isVertical
      }
    }, extraList);
    var head = h('div', {
      class: {
        'cmui-tabbar__head': true,
        'flex-container': !isVertical,
        'flex-container-col': isVertical,
        'pos-s': screen
      },
      style: {
        top: screen ? +this.top + 'px' : undefined,
        'z-index': 1
      },
      ref: 'head'
    }, [this.nav[0] ? pre : undefined, nav, this.nav[1] ? next : undefined, extraList.length ? extra : undefined]);
    return h('div', {
      class: ["cmui-tabbar cmui-tabbar-".concat(this.position), {
        'flex-container vfull': this.isVertical,
        'flex-container-col hfull': this.screen && !this.isVertical
      }],
      style: {
        height: this.screen && isVertical ? '100vh' : undefined // vnode.data.staticStyle.height

      }
    }, _.includes(['right', 'bottom'], position) ? [content, head] : [head, content]);
  }
};

/* script */
const __vue_script__$1 = script$1;

/* template */

  /* style */
  const __vue_inject_styles__$1 = undefined;
  /* scoped */
  const __vue_scope_id__$1 = undefined;
  /* module identifier */
  const __vue_module_identifier__$1 = undefined;
  /* functional template */
  const __vue_is_functional_template__$1 = undefined;
  /* style inject */
  
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  const __vue_component__$1 = /*#__PURE__*/normalizeComponent(
    {},
    __vue_inject_styles__$1,
    __vue_script__$1,
    __vue_scope_id__$1,
    __vue_is_functional_template__$1,
    __vue_module_identifier__$1,
    false,
    undefined,
    undefined,
    undefined
  );

__vue_component__$1.install = function (Vue, Maple) {
  Vue.component(__vue_component__$1.name, __vue_component__$1);
};

module.exports = __vue_component__$1;
